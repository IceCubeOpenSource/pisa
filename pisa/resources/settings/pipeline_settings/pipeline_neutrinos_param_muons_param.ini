[defaults]
; Define file names here to easily reference in stage specifications
neutrino_mc_file = events/neutrino_events__pingu_v36__runs_388-390__proc_v5.hdf5
muon_mc_file = events/muongun_events__pingu_v36__runs_000-009__proc_v5.hdf5

; Define cache depths here
disk_cache_depth = 20
transform_cache_depth = 200
result_cache_depth = 200

; Define common binning here to easily reference in stage specifications
nu_true_e = dict(name=true_energy, units='GeV',
                 tex=r'E_\nu,\,{\rm true}',
                 domain=(1, 80), n_bins=40, is_log=True)
nu_true_cz = dict(name=true_coszen, units=None,
                  tex=r'\cos\,\theta_\nu,\,{\rm true}',
                  domain=(-1, 0), n_bins=20, is_lin=True)

nu_reco_e = dict(name=reco_energy, units='GeV',
                 tex=r'E_\nu,\,{\rm reco}',
                 domain=(1, 80), n_bins=40, is_log=True)
nu_reco_cz = dict(name=reco_coszen, units=None,
                  tex=r'\cos\,\theta_\nu,\,{\rm reco}',
                  domain=(-1, 0), n_bins=20, is_lin=True)

nu_true_e_oversamp = dict(name=true_energy, units='GeV',
                          tex=r'E_\nu,\,{\rm true}',
                          domain=(1, 80), n_bins=400, is_log=True)
nu_true_cz_oversamp = dict(name=true_coszen, units=None,
                           tex=r'\cos\,\theta_\nu,\,{\rm true}',
                           domain=(-1, 0), n_bins=200, is_lin=True)

mu_true_e = dict(name=true_energy, units='GeV',
                 tex=r'E_\mu,\,{\rm true}',
                 domain=(1, 80), n_bins=40, is_log=True)
mu_true_cz = dict(name=true_coszen, units=None,
                  tex=r'\cos\,\theta_\mu,\,{\rm true}',
                  domain=(-1, 0), n_bins=20, is_lin=True)

mu_reco_e = dict(name=reco_energy, units='GeV',
                 tex=r'E_\mu,\,{\rm reco}',
                 domain=(1, 80), n_bins=40, is_log=True)
mu_reco_cz = dict(name=reco_coszen, units=None,
                  tex=r'\cos\,\theta_\mu,\,{\rm reco}',
                  domain=(-1, 0), n_bins=20, is_lin=True)

mu_true_e_oversamp = dict(name=true_energy, units='GeV',
                          tex=r'E_\mu,\,{\rm true}',
                          domain=(1, 80), n_bins=400, is_log=True)
mu_true_cz_oversamp = dict(name=true_coszen, units=None,
                           tex=r'\cos\,\theta_\mu,\,{\rm true}',
                           domain=(-1, 0), n_bins=200, is_lin=True)


[neutrino_flux]
service = FluxServiceHondaIP
histogram = true
output_binning = %(nu_true_e_oversamp)s
output_binning = %(nu_true_cz_oversamp)s

[neutrino_osc]
service = OscServiceProb3GPU
parent = neutrino_flux
input_binning = %(nu_true_e_oversamp)s
input_binning = %(nu_true_cz_oversamp)s
output_binning = %(nu_true_e)s
output_binning = %(nu_true_cz)s

[neutrino_aeff]
service = AeffServiceHist
parent = neutrino_osc
mc_file = %(neutrino_mc_file)s
input_binning = %(nu_true_e)s
input_binning = %(nu_true_cz)s
output_binning = %(nu_true_e)s
output_binning = %(nu_true_cz)s

[neutrino_reco]
service = RecoServiceHist
parent = neutrino_aeff
mc_file = %(neutrino_mc_file)s
input_binning = %(nu_true_e)s
input_binning = %(nu_true_cz)s
output_binning = %(nu_reco_e)s
output_binning = %(nu_reco_cz)s

[neutrino_pid]
service = PIDserviceHist
parent = neutrino_reco
mc_file = %(neutrino_mc_file)s
input_binning = %(nu_reco_e)s
input_binning = %(nu_reco_cz)s
output_binning = %(nu_reco_e)s
output_binning = %(nu_reco_cz)s


[muon_flux]
service = FluxServiceMuon
histogram = true
output_binning = %(mu_true_e_oversamp)s
output_binning = %(mu_true_cz_oversamp)s

[muon_aeff]
service = AeffServiceHist
parent = muon_flux
mc_file = %(muon_mc_file)s
input_binning = %(mu_true_e_oversamp)s
input_binning = %(mu_true_cz_oversamp)s
output_binning = %(mu_true_e)s
output_binning = %(mu_true_cz)s

[muon_reco]
service = RecoServiceHist
parent = muon_aeff
mc_file = %(muon_mc_file)s
input_binning = %(mu_true_e)s
input_binning = %(mu_true_cz)s
output_binning = %(mu_reco_e)s
output_binning = %(mu_reco_cz)s

[muon_pid]
service = PIDserviceHist
parent = muon_reco
mc_file = %(muon_mc_file)s
input_binning = %(mu_reco_e)s
input_binning = %(mu_reco_cz)s
output_binning = %(mu_reco_e)s
output_binning = %(mu_reco_cz)s


[output]
service = AddMapSets
parents = neutrino_pid, muon_pid
