[defaults]
neutrino_mc_file = events/neutrino_events__pingu_v36__runs_388-390__proc_v5.hdf5
muon_mc_file = events/muongun_events__pingu_v36__runs_000-009__proc_v5.hdf5

disk_cache_depth = 10
transform_cache_depth = 100
result_cache_depth = 100


[neutrino_mc]
service = LoadEvents
file = %(neutrino_mc_file)s

[neutrino_flux]
service = FluxServiceHondaIP
parent = neutrino_mc
histogram = true
output_binning = dict(name=energy, units='GeV', tex=r'E_\nu',
                      domain=(1, 80), n_bins=400, is_log=True)
output_binning = dict(name=coszen, tex=r'\cos\,\theta_z',
                      domain=(-1, 0), n_bins=200, is_lin=True)

[neutrino_osc]
service = OscServiceProb3GPU
parent = neutrino_flux
input_binning = dict(name=energy, units='GeV', tex=r'E_\nu',
                     domain=(1, 80), n_bins=400, is_log=True)
input_binning = dict(name=coszen, tex=r'\cos\,\theta_z',
                     domain=(-1, 0), n_bins=200, is_lin=True)

[apply_flux_and_osc_weights]
service = ApplyHistToMCWeights
parent = neutrino_osc

[neutrino_aeff]
service = AeffServiceMC
parent = apply_flux_and_osc_weights

[neutrino_reco]
service = RecoServiceMC
parent = neutrino_aeff

[neutrino_pid]
service = PIDserviceMC
parent = neutrino_reco


[muon_mc]
service = LoadEvents
file = %(muon_mc_file)s

[muon_flux]
service = FluxServiceMuon
parent = muon_mc

[muon_aeff]
service = AeffServiceMC
parent = muon_flux

[muon_reco]
service = RecoServiceMC
parent = muon_aeff

[muon_pid]
service = PIDServiceMC
parent = muon_reco


[output]
service = Histogram
parents = neutrino_pid, muon_pid
from_fields = reco_energy, reco_coszen, pid
output_binning = dict(name=energy, units='GeV', tex=r'E_\nu',
                      domain=(1, 80), n_bins=40, is_log=True)
output_binning = dict(name=coszen, tex=r'\cos\,\theta_z',
                      domain=(-1, 0), n_bins=20, is_lin=True)
output_binning = dict(name=pid, tex=r'{\rm PID}',
                      bin_edges=[-3, 0, 2, inf])
